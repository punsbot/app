apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: punsbot
    name: database
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    labels:
      app: punsbot
    name: punsbot
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Base image to build the application
    labels:
      app: punsbot
    name: alpine
  spec:
    tags:
    - from:
        kind: DockerImage
        name: gliderlabs/alpine:3.7
      name: "3.7"
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: punsbot
    name: punsbot
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: punsbot:latest
    source:
      git:
        uri: https://github.com/soukron/punsbot.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: alpine:3.7
      type: Docker
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: SPqjucG6IbbIivbWk1eJo6NQOG1uT2yKAw8ijTi3
      type: GitHub
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: punsbot
    name: punsbot
  spec:
    replicas: 1
    selector:
      name: punsbot
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: punsbot
        name: punsbot
      spec:
        containers:
        - env:
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: telegram-token-secret
          - name: DBLOCATION
            value: /var/punsdb/punsdb.db
          image: ' '
          name: punsbot
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/punsdb
            name: database-mount
        volumes:
        - name: database-mount
          persistentVolumeClaim:
            claimName: database
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - punsbot
        from:
          kind: ImageStreamTag
          name: punsbot:latest
      type: ImageChange
    - type: ConfigChange
